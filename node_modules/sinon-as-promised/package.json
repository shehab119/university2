{
  "_from": "sinon-as-promised",
  "_id": "sinon-as-promised@4.0.3",
  "_inBundle": false,
  "_integrity": "sha1-wFRbFoX9gTWIpO1pcBJIftEdFRs=",
  "_location": "/sinon-as-promised",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sinon-as-promised",
    "fetchSpec": "latest",
    "name": "sinon-as-promised",
    "raw": "sinon-as-promised",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sinon-as-promised/-/sinon-as-promised-4.0.3.tgz",
  "_shasum": "c0545b1685fd813588a4ed697012487ed11d151b",
  "_spec": "sinon-as-promised",
  "_where": "H:\\MyCourses\\ecomprojects\\Authentication",
  "author": {
    "email": "bvdrucker@gmail.com",
    "name": "Ben Drucker",
    "url": "http://www.bendrucker.me/"
  },
  "bugs": {
    "url": "https://github.com/bendrucker/sinon-as-promised/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "create-thenable": "~1.0.0",
    "native-promise-only": "~0.8.1"
  },
  "deprecated": false,
  "description": "Sugar methods for using sinon.js stubs with promises",
  "devDependencies": {
    "bluebird": "^3.4.1",
    "sinon": "1",
    "standard": "^8.0.0",
    "tape": "^4.0.0"
  },
  "files": [
    "index.js",
    "readme.md"
  ],
  "homepage": "https://github.com/bendrucker/sinon-as-promised",
  "keywords": [
    "promises",
    "sinon",
    "test"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "sinon-as-promised",
  "optionalDependencies": {},
  "peerDependencies": {
    "sinon": "1"
  },
  "readme": "sinon-as-promised [![Build Status](https://travis-ci.org/bendrucker/sinon-as-promised.svg?branch=master)](https://travis-ci.org/bendrucker/sinon-as-promised)\n=================\n\n> Extend [Sinon](https://github.com/cjohansen/sinon.js) stubs with promise stubbing methods.\n\n*Sinon 2 added `resolves` and `rejects` methods and no longer requires this library.*\n\n## Installing\n```sh\nnpm install sinon-as-promised\n```\n\nIf you're using sinon-as-promised in the browser and are not using Browserify/Webpack, use [3.x](https://github.com/bendrucker/sinon-as-promised/tree/v3.0.1) or earlier.\n\n## Usage\n\n```js\nvar sinon  = require('sinon')\nrequire('sinon-as-promised')\n\nsinon.stub().resolves('foo')().then(function (value) {\n  assert.equal(value, 'foo')\n})\n```\n\nYou'll only need to require sinon-as-promised once. It attaches the appropriate stubbing functions which will then be available anywhere else you require sinon. It defaults to using native ES6 Promise [(or provides a polyfill)](https://github.com/getify/native-promise-only), but you can use another promise library if you'd like, as long as it exposes a constructor:\n\n```js\n// Using Bluebird\nvar Bluebird = require('bluebird')\nrequire('sinon-as-promised')(Bluebird)\n```\n\n## API\n\n#### `stub.resolves(value)` -> `stub`\n\n\n##### value\n\n*Required*  \nType: `any`\n\nWhen called, the stub will return a \"thenable\" object which will return a promise for the provided `value`. Any [Promises/A+](https://promisesaplus.com/) compliant library will handle this object properly.\n\n```js\nvar stub = sinon.stub();\nstub.resolves('foo');\n\nstub().then(function (value) {\n    // value === 'foo'\n});\n\nstub.onCall(0).resolves('bar')\nstub().then(function (value) {\n    // value === 'bar'\n});\n```\n---\n\n#### `stub.rejects(err)` -> `stub`\n\n##### err\n\n*Required*  \nType: `error` / `string`\n\nWhen called, the stub will return a thenable which will return a reject promise with the provided `err`. If `err` is a string, it will be set as the message on an `Error` object.\n\n```js\nstub.rejects(new Error('foo'))().catch(function (error) {\n    // error.message === 'foo'\n});\nstub.rejects('foo')().catch(function (error) {\n    // error.message === 'foo'\n});\n\nstub.onCall(0).rejects('bar');\nstub().catch(function (error) {\n    // error.message === 'bar'\n});\n```\n\n## Examples\n\n* [angular](https://github.com/bendrucker/sinon-as-promised/tree/master/examples/angular)\n* [Bluebird](https://github.com/bendrucker/sinon-as-promised/tree/master/examples/bluebird)\n* [Node or Browserify](https://github.com/bendrucker/sinon-as-promised/tree/master/examples/node-browserify)\n\n## License\n\nMIT Â© [Ben Drucker](http://bendrucker.me)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/bendrucker/sinon-as-promised.git"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "version": "4.0.3"
}
